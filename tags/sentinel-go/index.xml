<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sentinel-go on binbin0325</title>
    <link>https://binbin0325.github.io/tags/sentinel-go/</link>
    <description>Recent content in sentinel-go on binbin0325</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Aug 2023 21:11:54 +0800</lastBuildDate><atom:link href="https://binbin0325.github.io/tags/sentinel-go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>揭秘 Sentinel-Go [热点参数] 的实现原理</title>
      <link>https://binbin0325.github.io/posts/sentinel-hotspot/</link>
      <pubDate>Sat, 12 Aug 2023 21:11:54 +0800</pubDate>
      
      <guid>https://binbin0325.github.io/posts/sentinel-hotspot/</guid>
      <description>1. 前文回顾在上文中介绍了流量控制的实现原理，流量控制本质是根据资源所属的流控规则以及滑动时间窗口统计结构，对流量统计与计算从而控制流量的行为</description>
    </item>
    
    <item>
      <title>揭秘 Sentinel-Go 毫秒级统计数据结构的实现原理</title>
      <link>https://binbin0325.github.io/posts/sentinel-data/</link>
      <pubDate>Wed, 09 Aug 2023 09:39:52 +0800</pubDate>
      
      <guid>https://binbin0325.github.io/posts/sentinel-data/</guid>
      <description>介绍一个流量治理组件通常拥有“限流”这个最基础的能力，实现限流其核心思想是通过统计一段时间内的请求数，然后根据预先设定的阈值判断是否应该进行</description>
    </item>
    
    <item>
      <title>揭秘 Sentinel-Go [流量控制] 的实现原理</title>
      <link>https://binbin0325.github.io/posts/sentinel-flow/</link>
      <pubDate>Thu, 03 Aug 2023 11:51:54 +0800</pubDate>
      
      <guid>https://binbin0325.github.io/posts/sentinel-flow/</guid>
      <description>1. 介绍在上文中我们介绍了 Sentinel-Go 的基石【基于滑动时间窗口实现的统计数据结构】，Sentinel-Go利用底层的数据结构，在上层建筑了多种流量治理的</description>
    </item>
    
  </channel>
</rss>
